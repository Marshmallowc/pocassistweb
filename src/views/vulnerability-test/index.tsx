import React, { useEffect, useState } from "react";
import { RouteComponentProps } from "react-router-dom";
import { Button, Form, Input, Space, Table, Card, Tag, Select, Upload } from "antd";
import { BugOutlined, UploadOutlined, PlayCircleOutlined } from "@ant-design/icons";
import "./index.less";

const VulnerabilityTest: React.FC<RouteComponentProps> = () => {
  const [form] = Form.useForm();
  const [data, setData] = useState<any[]>([]);
  const [total, setTotal] = useState<number>(0);

  const columns = [
    { 
      title: "序号",
      dataIndex: "order",
      width: '8%',
      render: (text: any, record: any, index: any) => index + 1
    },
    { title: "测试ID", dataIndex: "id" },
    { title: "测试名称", dataIndex: "test_name" },
    { title: "目标URL", dataIndex: "target_url" },
    { title: "漏洞类型", dataIndex: "vulnerability_type" },
    { 
      title: "测试状态", 
      dataIndex: "status",
      render: (status: string) => {
        const colors = {
          'running': 'blue',
          'completed': 'green',
          'failed': 'red',
          'pending': 'orange'
        };
        return <Tag color={colors[status as keyof typeof colors]}>{status}</Tag>;
      }
    },
    { 
      title: "发现漏洞", 
      dataIndex: "vulnerabilities_found",
      render: (count: number) => count > 0 ? 
        <Tag color="red">{count} 个漏洞</Tag> : 
        <Tag color="green">安全</Tag>
    },
    { title: "创建时间", dataIndex: "created_at" },
    {
      title: "操作",
      render: (text: any, record: any) => {
        return (
          <Space>
            <Button type="link" icon={<PlayCircleOutlined />}>
              重新测试
            </Button>
            <Button type="link">查看详情</Button>
            <Button type="link" danger>删除</Button>
          </Space>
        );
      }
    }
  ];

  const handleFinish = (values: any) => {
    console.log('搜索条件:', values);
  };

  const uploadProps = {
    name: 'file',
    action: '/api/upload',
    headers: {
      authorization: 'authorization-text',
    },
    onChange(info: any) {
      if (info.file.status !== 'uploading') {
        console.log(info.file, info.fileList);
      }
      if (info.file.status === 'done') {
        console.log(`${info.file.name} 文件上传成功`);
      } else if (info.file.status === 'error') {
        console.log(`${info.file.name} 文件上传失败`);
      }
    },
  };

  return (
    <div className="vulnerability-test-wrap">
      <Card 
        title={
          <span>
            <BugOutlined style={{ marginRight: 8 }} />
            漏洞测试管理
          </span>
        }
      >
        <Space direction="vertical" size="middle" style={{ width: '100%' }}>
          <Form form={form} layout="inline" onFinish={handleFinish}>
            <Form.Item label="关键字" name="search">
              <Input placeholder="请输入关键字" allowClear />
            </Form.Item>
            <Form.Item label="漏洞类型" name="vulnerability_type">
              <Select allowClear style={{ width: 150 }} placeholder="选择类型">
                <Select.Option value="sql_injection">SQL注入</Select.Option>
                <Select.Option value="xss">XSS跨站脚本</Select.Option>
                <Select.Option value="csrf">CSRF攻击</Select.Option>
                <Select.Option value="file_upload">文件上传</Select.Option>
                <Select.Option value="command_injection">命令注入</Select.Option>
              </Select>
            </Form.Item>
            <Form.Item label="状态" name="status">
              <Select allowClear style={{ width: 120 }} placeholder="选择状态">
                <Select.Option value="running">运行中</Select.Option>
                <Select.Option value="completed">已完成</Select.Option>
                <Select.Option value="failed">失败</Select.Option>
                <Select.Option value="pending">等待中</Select.Option>
              </Select>
            </Form.Item>
            <Form.Item>
              <Button type="primary" htmlType="submit">
                查询
              </Button>
            </Form.Item>
          </Form>

          <Space>
            <Button
              type="primary"
              onClick={() => {
                console.log('创建新的漏洞测试');
              }}
            >
              创建测试
            </Button>
            <Upload {...uploadProps}>
              <Button icon={<UploadOutlined />}>
                批量导入测试用例
              </Button>
            </Upload>
            <Button 
              type="default"
              onClick={() => {
                console.log('导出测试报告');
              }}
            >
              导出报告
            </Button>
          </Space>

          <Table
            className="vulnerability-test-table"
            columns={columns}
            dataSource={data}
            rowKey="id"
            pagination={{
              current: 1,
              pageSize: 10,
              total: total,
              showTotal: (total: number) => `共${total}条`,
              showQuickJumper: true,
              showSizeChanger: true,
            }}
          />
        </Space>
      </Card>
    </div>
  );
};

export default VulnerabilityTest;
